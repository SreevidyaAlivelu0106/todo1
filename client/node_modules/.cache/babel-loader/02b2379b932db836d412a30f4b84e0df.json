{"ast":null,"code":"import React, { component } from 'react';\nimport { addTask, getTasks, updateTask, deleteTask } from \"./services/taskServices\";\n\nclass Tasks extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      tasks: [],\n      currentTask: \"\"\n    };\n\n    this.handleChange = _ref => {\n      let {\n        currentTarget: input\n      } = _ref;\n      this.setState({\n        currentTask: input.value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const originalTasks = this.state.tasks;\n\n      try {\n        const {\n          data\n        } = await addTask({\n          task: this.state.currentTask\n        });\n        const tasks = originalTasks;\n        tasks.push(data);\n        this.setState({\n          tasks,\n          currentTask: \"\"\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleUpdate = async currentTask => {\n      const originalTasks = this.state.tasks;\n\n      try {\n        const tasks = [...originalTasks];\n        const index = tasks.findIndex(task => task._id === currentTask);\n        tasks[index] = { ...tasks[index]\n        };\n        tasks[index].completed = !tasks[index].completed;\n        this.setState({\n          tasks\n        });\n        await updateTask(currentTask, {\n          completed: tasks[index].completed\n        });\n      } catch (error) {\n        this.setState({\n          tasks: originalTasks\n        });\n        console.log(error);\n      }\n    };\n\n    this.handleDelete = async currentTask => {\n      const originalTasks = this.state.tasks;\n\n      try {\n        const tasks = originalTasks.filter(task => task._id !== currentTask);\n        this.setState({\n          tasks\n        });\n        await deleteTask(currentTask);\n      } catch (error) {\n        this.setState({\n          tasks: originalTasks\n        });\n        console.log(error);\n      }\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const {\n        data\n      } = await getTasks();\n      this.setState({\n        tasks: data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n}\n\nexport default Tasks;","map":{"version":3,"sources":["/Users/sreevidyaalivelu/Desktop/app/client/src/Task.js"],"names":["React","component","addTask","getTasks","updateTask","deleteTask","Tasks","Component","state","tasks","currentTask","handleChange","currentTarget","input","setState","value","handleSubmit","e","preventDefault","originalTasks","data","task","push","error","console","log","handleUpdate","index","findIndex","_id","completed","handleDelete","filter","componentDidMount"],"mappings":"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","sourcesContent":["import React, {component} from 'react';\nimport{\n  addTask,\n  getTasks,\n  updateTask,\n  deleteTask\n} from \"./services/taskServices\";\nclass Tasks extends Component {\n  state={tasks: [], currentTask:\"\" }\n  async componentDidMount(){\n    try{\n      const {data}= await getTasks();\n      this.setState({tasks:data});\n    }\n    catch(error){\n      console.log(error);\n    }\n  }\n\n  handleChange=({currentTarget: input})=>{\n    this.setState({currentTask: input.value});\n  }\n\n  handleSubmit=async(e)=>{\n    e.preventDefault();\n    const originalTasks=this.state.tasks;\n    try{\n      const{data}=await addTask({task:this.state.currentTask});\n      const tasks= originalTasks;\n      tasks.push(data);\n    this.setState({tasks,currentTask:\"\"});\n  }\n  catch(error){\n    console.log(error);\n  }\n  }\n\nhandleUpdate=async(currentTask)=>{\n  const originalTasks=this.state.tasks;\n  try{\n    const tasks=[...originalTasks];\n    const index=tasks.findIndex((task)=>task._id===currentTask);\n    tasks[index]={...tasks[index]};\n    tasks[index].completed=!tasks[index].completed;\n    this.setState({tasks});\n    await updateTask(currentTask, {completed: tasks[index].completed})\n  }\n  catch(error){\n    this.setState({tasks:originalTasks});\n    console.log(error);\n  }\n}\n\nhandleDelete = async(currentTask)=>{\n  const originalTasks=this.state.tasks;\n  try{\n    const tasks = originalTasks.filter(\n      (task)=>task._id!==currentTask\n    );\n    this.setState({tasks});\n    await deleteTask(currentTask);\n  }\n  catch(error){\n    this.setState({tasks: originalTasks});\n    console.log(error);\n  }\n};\n\n}\n\nexport default Tasks;\n"]},"metadata":{},"sourceType":"module"}